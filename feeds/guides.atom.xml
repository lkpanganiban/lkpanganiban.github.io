<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>lkpanganiban.com - guides</title><link href="https://www.lkpanganiban.com/" rel="alternate"></link><link href="https://www.lkpanganiban.com/feeds/guides.atom.xml" rel="self"></link><id>https://www.lkpanganiban.com/</id><updated>2018-10-23T08:00:00+08:00</updated><entry><title>Setting up Windows Subsystem for Linux (WSL) with Vagrant</title><link href="https://www.lkpanganiban.com/2018/10/23/setting-up-windows-subsystem-for-linux-wsl-with-vagrant/" rel="alternate"></link><published>2018-10-23T08:00:00+08:00</published><updated>2018-10-23T08:00:00+08:00</updated><author><name>Ian Panganiban</name></author><id>tag:www.lkpanganiban.com,2018-10-23:/2018/10/23/setting-up-windows-subsystem-for-linux-wsl-with-vagrant/</id><summary type="html">&lt;p&gt;Windows Subsystem for Linux or WSL is a powerful tool for implementing your development workflow in Windows 10. It allows you to execute BASH and other development setups. Vagrant is an abstraction layer where it provides an interface for you to work on a VM. This guide will just go …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Windows Subsystem for Linux or WSL is a powerful tool for implementing your development workflow in Windows 10. It allows you to execute BASH and other development setups. Vagrant is an abstraction layer where it provides an interface for you to work on a VM. This guide will just go through the different steps in configuring this development environment.&lt;/p&gt;
&lt;h2&gt;Steps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Configure and setup the Windows Subsystem for Linux. Here is the link for the in-depth setup and configuration of WSL. &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10"&gt;Setup WSL in Windows 10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install Virtualbox and Vagrant for windows. &lt;em&gt;You may need to restart your machine after installing vagrant.&lt;/em&gt; &lt;a href="https://www.vagrantup.com/downloads.html"&gt;Vagarant Installer&lt;/a&gt; &lt;a href="https://www.virtualbox.org/wiki/Downloads"&gt;Virtualbox Installer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install vagrant to the WSL environment. &lt;em&gt;The version of your vagrant must be the same as the version you have installed in windows.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your WSL terminal, configure the following WSL environment variables:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export VAGRANT_WSL_ENABLE_WINDOWS_ACCESS="1"
export PATH="$PATH:/mnt/c/Program Files/Oracle/VirtualBox"
export VAGRANT_WSL_WINDOWS_ACCESS_USER_HOME_PATH="/mnt/e/Development"&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your Vagrantfile, add the &lt;code&gt;v.customize&lt;/code&gt; line in the &lt;code&gt;config.vm.provider&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ruby
config.vm.provider "virtualbox" do |v|
    v.memory = 1024
    v.cpus = 1
    v.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
end&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can now run vagrant with WSL.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content></entry><entry><title>Backing up and Restoring Mongo DB</title><link href="https://www.lkpanganiban.com/2018/09/22/backing-up-and-restoring-mongo-db/" rel="alternate"></link><published>2018-09-22T12:15:00+08:00</published><updated>2018-09-22T12:15:00+08:00</updated><author><name>Ian Panganiban</name></author><id>tag:www.lkpanganiban.com,2018-09-22:/2018/09/22/backing-up-and-restoring-mongo-db/</id><summary type="html">&lt;p&gt;Mongo DB is a type NoSQL database which treats your data like JSON-
documents (key-value pair). In this post, I will be showing some steps in backin
g up and restoring a Mongo DB.&lt;/p&gt;
&lt;p&gt;We will use Mongo DB's built-in utility to backup and restore data.&lt;/p&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Dumping Mongo DB …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Mongo DB is a type NoSQL database which treats your data like JSON-
documents (key-value pair). In this post, I will be showing some steps in backin
g up and restoring a Mongo DB.&lt;/p&gt;
&lt;p&gt;We will use Mongo DB's built-in utility to backup and restore data.&lt;/p&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Dumping Mongo DB data&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mongodump --db mongo-db-name --collection mongo-collection-name --out - | gzip &amp;gt;  mongo-collection-name-backup.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Restoring Mongo DB data&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gunzip -c mongo-collection-name.gz &amp;gt; mongo-collection-name-backup.bson
mongorestore --db mongo-db-name --collection mongo-collection-name mongo-collection-name-backup.bson
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>Backup and Restore with PostgreSQL</title><link href="https://www.lkpanganiban.com/2018/09/21/backup-and-restore-with-postgresql/" rel="alternate"></link><published>2018-09-21T20:04:00+08:00</published><updated>2018-09-21T20:04:00+08:00</updated><author><name>Ian Panganiban</name></author><id>tag:www.lkpanganiban.com,2018-09-21:/2018/09/21/backup-and-restore-with-postgresql/</id><summary type="html">&lt;p&gt;PostgreSQL is a very powerful SQL database. It provides various fields in storing different data types like date, json, text, a
rrays, etc. It also contains some backup and restore mechanism which you can use to safeguard your data. In the following section, I will demonstrate how you can backup …&lt;/p&gt;</summary><content type="html">&lt;p&gt;PostgreSQL is a very powerful SQL database. It provides various fields in storing different data types like date, json, text, a
rrays, etc. It also contains some backup and restore mechanism which you can use to safeguard your data. In the following section, I will demonstrate how you can backup and restore your PostgreSQL database.&lt;/p&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Backing up PostgreSQL with pg_dump&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pg_dump name_of_database &amp;gt; name_of_the_backup_file.bak
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Restoring a PostgreSQL backup &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;psql empty_db_name &amp;lt; name_of_the_backup_file.bak
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>Backing up and restoring Elasticsearch data with Elasticdump</title><link href="https://www.lkpanganiban.com/2018/09/21/backing-up-and-restoring-elasticsearch-data-with-elasticdump/" rel="alternate"></link><published>2018-09-21T19:17:00+08:00</published><updated>2018-09-21T19:17:00+08:00</updated><author><name>Ian Panganiban</name></author><id>tag:www.lkpanganiban.com,2018-09-21:/2018/09/21/backing-up-and-restoring-elasticsearch-data-with-elasticdump/</id><summary type="html">&lt;p&gt;Elasticsearch is a type NoSQL database which allows you to store unstructured data. It is highly performant and scalable. It allows you to implement full text searches and aggregations. This is very useful when dealing with large amounts of data.&lt;/p&gt;
&lt;p&gt;Elasticdump is a NodeJS based package. This allows you to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Elasticsearch is a type NoSQL database which allows you to store unstructured data. It is highly performant and scalable. It allows you to implement full text searches and aggregations. This is very useful when dealing with large amounts of data.&lt;/p&gt;
&lt;p&gt;Elasticdump is a NodeJS based package. This allows you to backup and restore Elasticsearch data. Its command line interface is quite intuitive to use.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;npm install -g elasticdump
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Backing up ES index&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;elasticdump --input=http://elastic-search.mydomain.com:9200/my_index --output=/backups/my_index.json
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Restoring ES index from a file&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;elasticdump --input=/backups/my_index.json --output=http://elastic-search.mydomain.com:9200/my_index
&lt;/pre&gt;&lt;/div&gt;</content></entry></feed>